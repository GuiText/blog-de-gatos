* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

:root {
  font-size: 62.5%;

  --hue: 500;
  --hue-footer: 500;
  --color-base-blue-100: hsl(195, 46%, 40%) /* hsl(var(--hue-footer), 50%, 40%) */;
  --color-base-blue-200: hsl(195, 91%, 25%)/*  hsl(var(--hue-footer), 91%, 25%) */;
  --color-base-white: hsl(0, 0%, 100%);
  --color-base-black-100: hsl(240, 6%, 13%) /* hsl(var(--hue), 60%, 40%) */;
  --color-base-black-200: hsl(240, 5%, 7%) /* hsl(var(--hue), 10%, 40%) */;
  --color-base-grey: hsla(0, 0%, 100%, 0.2);
}

html, body {
  font-family: 'Mulish', sans-serif;
}

body {
  font-size: 1.6rem;
}

#app {
  display: grid;
  grid-template-rows: max-content 1fr max-content;
  height: 100vh;
}

.container {
  padding: 1.6rem 2.2rem;
  margin: 0 auto;
}

header {
  display: flex;
  align-items: center;
  gap: 2.6rem;

  width: 100%;

  padding: 1.6rem 2.2rem;
  margin: 0 auto;

  background-color: var(--color-base-blue-200);
}

header .logo {
  background-color: var(--color-base-white);
  padding: .8rem;

  border-radius: 50%;
}

header form {
  flex: 1;
}

.input-wrapper label {
  width: 1px;
  height: 1px;
  overflow: hidden;
  position: absolute;
}

.input-wrapper input {
  font-size: 1.6rem;
  font-style: normal;

  width: 100%;
  height: 4rem;
  padding: 0 1.4rem;

  border-radius: 4px;
  border: none;

  background: var(--color-base-grey);
}

.input-wrapper input::placeholder {
  opacity: 0.56;
  color: var(--color-base-white);
}

header .avatar {
  width: 4.2rem;
  height: 4.2rem;

  border-radius: 50%;
}

main {
  width: min(112rem, 100%);
}

main .cap {
  aspect-ratio: 16/9;
  object-fit: cover;
  width: 100%;

  margin-bottom: 1.4rem;
}

main h1 {
  color: var(--color-base-black-100);
  font-size: 24px;
  line-height: 160%;

  
  margin-bottom: .8rem;
}

main .like,
main .deslike {
  background-color: var(--color-base-blue-200);
  padding: 1.2rem;
  border-radius: 50%;

  margin-bottom: 3rem;
}

main .deslike {
  margin-left: 1.2rem;
}

main p {
  color: var(--color-base-black-200);
  font-size: 1.6rem;
  line-height: 160%;

  margin-bottom: 1.8rem;
}

aside {
  display: flex;
  flex-direction: column;
  gap: 3.2rem;

  padding: 1.6rem 2.2rem;
  margin: 0 auto;
}

aside h2 {
  color: var(--color-base-black-100);
  font-size: 2.4rem;
  line-height: 160%;

  margin-bottom: 3.2rem;
}

.section-gallery {
  display: grid;
  grid-template-columns: repeat(2, max-content);
  
  align-items: center;

  gap: 1.6rem;


  margin-bottom: 3.2rem;
}


aside figcaption h3 {
  color: var(--color-base-black-100);
  font-size: 1.8rem;
  line-height: 160%;
}

aside figcaption p {
  color: var(--color-base-black-200);
  font-size: 1.4rem;
  line-height: 160%;


  max-width: 21.5rem;
}

footer {
  height: 6.4rem;
  padding: 1.6rem;

  text-align: center;
  font-size: 1.6rem;
  font-weight: 600;
  color: var(--color-base-white);

  background: var(--color-base-blue-100);

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}


@media (min-width: 990px) {
  #app {
    grid-template-areas: 
    "header header"
    "main aside"
    "footer footer";
  }

  #app header {
    grid-area: header;
  }

  #app main {
    grid-area: main;
  }

  #app aside {
    grid-area: aside;
  }

  #app footer {
    grid-area: footer;
  }

  header {
    padding: 1.2rem 11.2rem;
  }

  main {
    padding: 4rem 0 4rem 10rem;
  }

  main .cap {
    border-radius: 5px;
  }

  .container {
    padding: 0;
  }

  aside {
    padding: 4rem 10rem 4rem 3.2rem;
  }
}

@media (min-width: 1420px) {
  main {
    width: 100%;
  }

  main .feedback {
    display: flex;
  }

  main .feedback h1 {
    margin-right: 36.6rem;
    width: 100%;
  }

  aside {
    width: 100%;
  }
}

header {
  --startY: -100%;
  animation: move 200ms;
}

footer {
  --startY: 100%;
  animation: move 200ms;
}

@keyframes move {
  from {
    transform: translateY(var(--startY));
  }
}

main {
	animation: appear 0.4s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;
}

.section-gallery {
  --delay: 400ms;
  animation: appear var(--delay) cubic-bezier(0.390, 0.575, 0.565, 1.000) both;
}

@keyframes appear {
  0% {
    transform: scale(0.5);
    opacity: 0;
  }
  100% {
    transform: scale(1);
  }
}



